(True_0) = (True)
(Case (True) (True)) = 1

(False_0) = (False)
(Case (False) (False)) = 1

(And3_0) = (@a (@b (@c (And3_3 a b c))))

(E) = @a@b@c (let d = (False_0); (E_split_c a b c d))
	(E_split_c a b (True) d) = let c = (True); (c)
	(E_split_c a b c d) = (d)

(And3_3 a b c) = (And3_split_a a b c E)
	(And3_split_a (True) b c e) = let a = (True); (And3_split_c a b c e)
    (And3_split_a a b c e) = ((e) a b c)

	(And3_split_c a b (True) e) = let c = (True); (c)
	(And3_split_c a b c e) = ((e) a b c)

(Main_0) = (And3_3 True False False)

(Match a b) = 0

(If 1 t e) = (t)
(If 0 t e) = (e)

(Main) = (Main_0)