(Plus3_0) = (@a (Plus3_1 a))
(Plus3_1 a) = (+ 3 (a))

(Pred_0) = (@a (Pred_1 a))
(Pred_1 a) = (Pred_split_a a)
	(Pred_split_a 0) = let a = 0; 0
	(Pred_split_a a) = (- (a) 1)

(Test1_0) = ((Pred_0) (+ 1 ((Pred_0) ((Plus3_0) 40))))

(Twice_0) = (@a (Twice_1 a))
(Twice_1 a) = (* 2 (a))

(Pow2_0) = (@a (Pow2_1 a))
(Pow2_1 a) = (Pow2_split_a a)
	(Pow2_split_a 0) = let a = 0; 1
	(Pow2_split_a a) = let b = (Pow2_b a); ((Twice_0) ((Pow2_0) (b)))
	(Pow2_b a) = (- (a) 1)

(Consume_0) = (@a (Consume_1 a))
(Consume_1 a) = (Consume_split_a a)
	(Consume_split_a 0) = let a = 0; 0
	(Consume_split_a a) = let b = (Consume_b a); ((Consume_0) (b))
	(Consume_b a) = (- (a) 1)

(If_then_else__0) = (@a (@b (@c (@d (If_then_else__4 a b c d)))))
(If_then_else__4 a b c d) = (If_then_else__split_b a b c d)
	(If_then_else__split_b a (False) c d) = let b = (False); (d)
	(If_then_else__split_b a (True) c d) = let b = (True); (c)

(Ifte_0) = ((If_then_else__0) Matteo (True_0) 1 0)

(Test2_0) = ((Consume_0) ((Pow2_0) 24))

(Main_0) = (Test1_0)

(Match a b) = 0

(If 1 t e) = (t)
(If 0 t e) = (e)

(Main) = (Main_0)